{"ast":null,"code":"var _jsxFileName = \"/Users/anbschool0009/Desktop/untitled folder 3/IA-Mate-repo/frontend/src/AIChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AIChat() {\n  _s();\n  const [aiPrompt, setAiPrompt] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [aiLoading, setAiLoading] = useState(false);\n  const [error, setError] = useState('');\n  const conversationEndRef = useRef(null);\n  useEffect(() => {\n    if (conversationEndRef.current) {\n      conversationEndRef.current.scrollTop = conversationEndRef.current.scrollHeight;\n    }\n  }, [conversation]);\n  useEffect(() => {\n    // Load conversations from DB on mount\n    fetch('http://localhost:3003/conversations').then(res => res.json()).then(data => setConversation(data.messages || [])).catch(err => console.error('Failed to load conversations', err));\n  }, []);\n\n  // Function to render text with clickable links\n  const renderTextWithLinks = text => {\n    const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n    const parts = text.split(urlRegex);\n    return parts.map((part, index) => {\n      if (urlRegex.test(part)) {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: part,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"text-blue-600 underline\",\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 16\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gradient-to-br from-blue-50 to-indigo-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-white shadow-sm border-b flex justify-between items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/app\",\n          className: \"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors\",\n          children: \"\\u2190 Diagram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-800\",\n          children: \"AI Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 mb-4 text-sm text-red-700 bg-red-100 rounded border border-red-400 text-center\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: conversationEndRef,\n        className: \"flex flex-col flex-1 overflow-y-auto mb-4 border border-gray-300 bg-white p-4 space-y-2 rounded-md\",\n        children: conversation.map((entry, index) => {\n          // Function to parse code blocks in message\n          const parseCodeBlocks = text => {\n            const regex = /```(\\w+)?\\n([\\s\\S]*?)```/g;\n            const parts = [];\n            let lastIndex = 0;\n            let match;\n            while ((match = regex.exec(text)) !== null) {\n              if (match.index > lastIndex) {\n                parts.push({\n                  type: 'text',\n                  content: text.substring(lastIndex, match.index)\n                });\n              }\n              parts.push({\n                type: 'code',\n                lang: match[1] || '',\n                content: match[2]\n              });\n              lastIndex = regex.lastIndex;\n            }\n            if (lastIndex < text.length) {\n              parts.push({\n                type: 'text',\n                content: text.substring(lastIndex)\n              });\n            }\n            return parts;\n          };\n\n          // Render code block UI\n          const CodeBlock = ({\n            lang,\n            content\n          }) => {\n            const copyCode = () => {\n              navigator.clipboard.writeText(content);\n            };\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative bg-gray-900 text-gray-100 rounded-md p-4 font-mono text-sm overflow-auto my-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs font-semibold\",\n                  children: lang || 'code'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: copyCode,\n                  className: \"text-gray-400 hover:text-white text-xs flex items-center space-x-1\",\n                  \"aria-label\": \"Copy code\",\n                  title: \"Copy code\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    strokeWidth: 2,\n                    className: \"w-4 h-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                      x: \"8\",\n                      y: \"8\",\n                      width: \"12\",\n                      height: \"12\",\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n                      x: \"4\",\n                      y: \"4\",\n                      width: \"12\",\n                      height: \"12\",\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Copy code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"whitespace-pre-wrap\",\n                children: content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this);\n          };\n          if (entry.sender === 'ai') {\n            // Remove ** signs from AI message\n            const cleanedMessage = entry.message.replace(/\\*\\*/g, '');\n            // Replace specific text pattern in AI message\n            const modifiedMessage = cleanedMessage.replace(/Python is a popular and powerful computer programming language\\./g, 'Python is a \" popular and powerful computer programming language\" .');\n            const parts = parseCodeBlocks(modifiedMessage);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"max-w-full break-words rounded-lg px-4 py-2 whitespace-pre-wrap self-start bg-gray-300 text-gray-900 flex flex-col\",\n              children: [parts.map((part, i) => {\n                if (part.type === 'code') {\n                  return /*#__PURE__*/_jsxDEV(CodeBlock, {\n                    lang: part.lang,\n                    content: part.content\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 30\n                  }, this);\n                } else {\n                  return renderTextWithLinks(part.content);\n                }\n              }), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => navigator.clipboard.writeText(modifiedMessage),\n                className: \"self-start mt-2 flex items-center space-x-1 text-gray-600 hover:text-gray-900 text-xs\",\n                \"aria-label\": \"Copy AI answer\",\n                title: \"Copy AI answer\",\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  fill: \"none\",\n                  viewBox: \"0 0 24 24\",\n                  stroke: \"currentColor\",\n                  strokeWidth: 2,\n                  className: \"w-4 h-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                    x: \"8\",\n                    y: \"8\",\n                    width: \"12\",\n                    height: \"12\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n                    x: \"4\",\n                    y: \"4\",\n                    width: \"12\",\n                    height: \"12\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Copy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"max-w-full break-words rounded-lg px-4 py-2 whitespace-pre-wrap self-end bg-blue-500 text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: entry.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full rounded border border-gray-300 focus-within:ring-2 focus-within:ring-blue-500 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: aiPrompt,\n          onChange: e => setAiPrompt(e.target.value),\n          className: \"flex-grow p-3 focus:outline-none pr-12 bg-transparent rounded-l text-gray-700\",\n          placeholder: \"Send a message\",\n          disabled: aiLoading,\n          onKeyDown: e => {\n            if (e.key === 'Enter' && !aiLoading) {\n              e.preventDefault();\n              if (!aiPrompt.trim()) {\n                setError('Please enter a prompt for AI.');\n                return;\n              }\n              setAiLoading(true);\n              setError('');\n              // Add user message to conversation (append to bottom)\n              setConversation(prev => [...prev, {\n                sender: 'user',\n                message: aiPrompt\n              }]);\n              fetch('http://localhost:3003/ai', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  prompt: aiPrompt\n                })\n              }).then(response => {\n                if (!response.ok) {\n                  throw new Error('Failed to get AI response');\n                }\n                return response.json();\n              }).then(data => {\n                // Add AI response to conversation (append to bottom)\n                setConversation(prev => [...prev, {\n                  sender: 'ai',\n                  message: data.response\n                }]);\n                setAiPrompt(''); // Clear input after sending\n              }).catch(() => {\n                setError('Error fetching AI response.');\n              }).finally(() => {\n                setAiLoading(false);\n              });\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            if (!aiPrompt.trim()) {\n              setError('Please enter a prompt for AI.');\n              return;\n            }\n            setAiLoading(true);\n            setError('');\n            // Add user message to conversation (append to bottom)\n            setConversation(prev => [...prev, {\n              sender: 'user',\n              message: aiPrompt\n            }]);\n            try {\n              const response = await fetch('http://localhost:3003/ai', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  prompt: aiPrompt\n                })\n              });\n              if (!response.ok) {\n                throw new Error('Failed to get AI response');\n              }\n              const data = await response.json();\n              // Add AI response to conversation (append to bottom)\n              setConversation(prev => [...prev, {\n                sender: 'ai',\n                message: data.response\n              }]);\n              setAiPrompt(''); // Clear input after sending\n            } catch (err) {\n              setError('Error fetching AI response.');\n            } finally {\n              setAiLoading(false);\n            }\n          },\n          disabled: aiLoading,\n          className: \"p-3 text-gray-600 rounded-r hover:bg-gray-200 disabled:opacity-50 flex items-center justify-center\",\n          \"aria-label\": \"Send to AI\",\n          children: aiLoading ? '⏳' : '➤'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(AIChat, \"wydEI0Fj0QN6yWUcam+EUBI4pJI=\");\n_c = AIChat;\nexport default AIChat;\nvar _c;\n$RefreshReg$(_c, \"AIChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","jsxDEV","_jsxDEV","AIChat","_s","aiPrompt","setAiPrompt","conversation","setConversation","aiLoading","setAiLoading","error","setError","conversationEndRef","current","scrollTop","scrollHeight","fetch","then","res","json","data","messages","catch","err","console","renderTextWithLinks","text","urlRegex","parts","split","map","part","index","test","href","target","rel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","role","ref","entry","parseCodeBlocks","regex","lastIndex","match","exec","push","type","content","substring","lang","length","CodeBlock","copyCode","navigator","clipboard","writeText","onClick","title","xmlns","fill","viewBox","stroke","strokeWidth","x","y","width","height","strokeLinecap","strokeLinejoin","sender","cleanedMessage","message","replace","modifiedMessage","i","value","onChange","e","placeholder","disabled","onKeyDown","key","preventDefault","trim","prev","method","headers","body","JSON","stringify","prompt","response","ok","Error","finally","_c","$RefreshReg$"],"sources":["/Users/anbschool0009/Desktop/untitled folder 3/IA-Mate-repo/frontend/src/AIChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction AIChat() {\n  const [aiPrompt, setAiPrompt] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [aiLoading, setAiLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const conversationEndRef = useRef(null);\n\n  useEffect(() => {\n    if (conversationEndRef.current) {\n      conversationEndRef.current.scrollTop = conversationEndRef.current.scrollHeight;\n    }\n  }, [conversation]);\n\n  useEffect(() => {\n    // Load conversations from DB on mount\n    fetch('http://localhost:3003/conversations')\n      .then(res => res.json())\n      .then(data => setConversation(data.messages || []))\n      .catch(err => console.error('Failed to load conversations', err));\n  }, []);\n\n  // Function to render text with clickable links\n  const renderTextWithLinks = (text) => {\n    const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n    const parts = text.split(urlRegex);\n    return parts.map((part, index) => {\n      if (urlRegex.test(part)) {\n        return <a key={index} href={part} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 underline\">{part}</a>;\n      } else {\n        return <span key={index}>{part}</span>;\n      }\n    });\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\n      <div className=\"p-4 bg-white shadow-sm border-b flex justify-between items-center\">\n        <div className=\"flex items-center space-x-4\">\n          <Link to=\"/app\" className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors\">\n            ← Diagram\n          </Link>\n          <h1 className=\"text-2xl font-bold text-gray-800\">AI Chat</h1>\n        </div>\n      </div>\n      {error && <div className=\"p-3 mb-4 text-sm text-red-700 bg-red-100 rounded border border-red-400 text-center\" role=\"alert\">{error}</div>}\n      <div className=\"flex-1 flex flex-col p-4\">\n        <div ref={conversationEndRef} className=\"flex flex-col flex-1 overflow-y-auto mb-4 border border-gray-300 bg-white p-4 space-y-2 rounded-md\">\n          {conversation.map((entry, index) => {\n            // Function to parse code blocks in message\n            const parseCodeBlocks = (text) => {\n              const regex = /```(\\w+)?\\n([\\s\\S]*?)```/g;\n              const parts = [];\n              let lastIndex = 0;\n              let match;\n              while ((match = regex.exec(text)) !== null) {\n                if (match.index > lastIndex) {\n                  parts.push({ type: 'text', content: text.substring(lastIndex, match.index) });\n                }\n                parts.push({ type: 'code', lang: match[1] || '', content: match[2] });\n                lastIndex = regex.lastIndex;\n              }\n              if (lastIndex < text.length) {\n                parts.push({ type: 'text', content: text.substring(lastIndex) });\n              }\n              return parts;\n            };\n\n            // Render code block UI\n            const CodeBlock = ({ lang, content }) => {\n              const copyCode = () => {\n                navigator.clipboard.writeText(content);\n              };\n              return (\n                <div className=\"relative bg-gray-900 text-gray-100 rounded-md p-4 font-mono text-sm overflow-auto my-2\">\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <span className=\"text-xs font-semibold\">{lang || 'code'}</span>\n                    <button\n                      onClick={copyCode}\n                      className=\"text-gray-400 hover:text-white text-xs flex items-center space-x-1\"\n                      aria-label=\"Copy code\"\n                      title=\"Copy code\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2} className=\"w-4 h-4\">\n                        <rect x=\"8\" y=\"8\" width=\"12\" height=\"12\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                        <rect x=\"4\" y=\"4\" width=\"12\" height=\"12\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                      </svg>\n                      <span>Copy code</span>\n                    </button>\n                  </div>\n                  <pre className=\"whitespace-pre-wrap\">{content}</pre>\n                </div>\n              );\n            };\n\n            if (entry.sender === 'ai') {\n              // Remove ** signs from AI message\n              const cleanedMessage = entry.message.replace(/\\*\\*/g, '');\n              // Replace specific text pattern in AI message\n              const modifiedMessage = cleanedMessage.replace(\n                /Python is a popular and powerful computer programming language\\./g,\n                'Python is a \" popular and powerful computer programming language\" .'\n              );\n              const parts = parseCodeBlocks(modifiedMessage);\n              return (\n                <div\n                  key={index}\n                  className=\"max-w-full break-words rounded-lg px-4 py-2 whitespace-pre-wrap self-start bg-gray-300 text-gray-900 flex flex-col\"\n                >\n                  {parts.map((part, i) => {\n                    if (part.type === 'code') {\n                      return <CodeBlock key={i} lang={part.lang} content={part.content} />;\n                    } else {\n                      return renderTextWithLinks(part.content);\n                    }\n                  })}\n                  <button\n                    onClick={() => navigator.clipboard.writeText(modifiedMessage)}\n                    className=\"self-start mt-2 flex items-center space-x-1 text-gray-600 hover:text-gray-900 text-xs\"\n                    aria-label=\"Copy AI answer\"\n                    title=\"Copy AI answer\"\n                  >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2} className=\"w-4 h-4\">\n                      <rect x=\"8\" y=\"8\" width=\"12\" height=\"12\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                      <rect x=\"4\" y=\"4\" width=\"12\" height=\"12\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                    </svg>\n                    <span>Copy</span>\n                  </button>\n                </div>\n              );\n            } else {\n              return (\n                <div\n                  key={index}\n                  className=\"max-w-full break-words rounded-lg px-4 py-2 whitespace-pre-wrap self-end bg-blue-500 text-white\"\n                >\n                  <span>{entry.message}</span>\n                </div>\n              );\n            }\n          })}\n        </div>\n        <div className=\"relative w-full rounded border border-gray-300 focus-within:ring-2 focus-within:ring-blue-500 flex items-center\">\n          <input\n            type=\"text\"\n            value={aiPrompt}\n            onChange={(e) => setAiPrompt(e.target.value)}\n            className=\"flex-grow p-3 focus:outline-none pr-12 bg-transparent rounded-l text-gray-700\"\n            placeholder=\"Send a message\"\n            disabled={aiLoading}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' && !aiLoading) {\n                e.preventDefault();\n                if (!aiPrompt.trim()) {\n                  setError('Please enter a prompt for AI.');\n                  return;\n                }\n                setAiLoading(true);\n                setError('');\n                // Add user message to conversation (append to bottom)\n                setConversation(prev => [...prev, { sender: 'user', message: aiPrompt }]);\n                fetch('http://localhost:3003/ai', {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/json' },\n                  body: JSON.stringify({ prompt: aiPrompt }),\n                })\n                  .then(response => {\n                    if (!response.ok) {\n                      throw new Error('Failed to get AI response');\n                    }\n                    return response.json();\n                  })\n                  .then(data => {\n                    // Add AI response to conversation (append to bottom)\n                    setConversation(prev => [...prev, { sender: 'ai', message: data.response }]);\n                    setAiPrompt(''); // Clear input after sending\n                  })\n                  .catch(() => {\n                    setError('Error fetching AI response.');\n                  })\n                  .finally(() => {\n                    setAiLoading(false);\n                  });\n              }\n            }}\n          />\n          <button\n            onClick={async () => {\n              if (!aiPrompt.trim()) {\n                setError('Please enter a prompt for AI.');\n                return;\n              }\n              setAiLoading(true);\n              setError('');\n              // Add user message to conversation (append to bottom)\n              setConversation(prev => [...prev, { sender: 'user', message: aiPrompt }]);\n              try {\n                const response = await fetch('http://localhost:3003/ai', {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/json' },\n                  body: JSON.stringify({ prompt: aiPrompt }),\n                });\n                if (!response.ok) {\n                  throw new Error('Failed to get AI response');\n                }\n                const data = await response.json();\n                // Add AI response to conversation (append to bottom)\n                setConversation(prev => [...prev, { sender: 'ai', message: data.response }]);\n                setAiPrompt(''); // Clear input after sending\n              } catch (err) {\n                setError('Error fetching AI response.');\n              } finally {\n                setAiLoading(false);\n              }\n            }}\n            disabled={aiLoading}\n            className=\"p-3 text-gray-600 rounded-r hover:bg-gray-200 disabled:opacity-50 flex items-center justify-center\"\n            aria-label=\"Send to AI\"\n          >\n            {aiLoading ? '⏳' : '➤'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AIChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}